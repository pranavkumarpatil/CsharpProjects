#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project_RTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PROJECT_RTO")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertRoles_Permission(Roles_Permission instance);
    partial void UpdateRoles_Permission(Roles_Permission instance);
    partial void DeleteRoles_Permission(Roles_Permission instance);
    partial void InsertRegistration(Registration instance);
    partial void UpdateRegistration(Registration instance);
    partial void DeleteRegistration(Registration instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::Project_RTO.Properties.Settings.Default.PROJECT_RTOConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<X_Emp_Dept> X_Emp_Depts
		{
			get
			{
				return this.GetTable<X_Emp_Dept>();
			}
		}
		
		public System.Data.Linq.Table<Roles_Permission> Roles_Permissions
		{
			get
			{
				return this.GetTable<Roles_Permission>();
			}
		}
		
		public System.Data.Linq.Table<Registration> Registrations
		{
			get
			{
				return this.GetTable<Registration>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicles
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
		
		public System.Data.Linq.Table<X_Cust_Doc> X_Cust_Docs
		{
			get
			{
				return this.GetTable<X_Cust_Doc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Emp_Id;
		
		private string _Emp_Code;
		
		private string _Emp_Name;
		
		private string _Emp_Address;
		
		private string _Emp_Pan;
		
		private string _Emp_Aadhar;
		
		private string _Emp_Mob;
		
		private string _Emp_Email;
		
		private System.Nullable<System.DateTime> _Emp_Join_Date;
		
		private System.Nullable<bool> _Emp_IsActive;
		
		private EntitySet<Login> _Logins;
		
		private EntitySet<Login> _Logins1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmp_IdChanging(int value);
    partial void OnEmp_IdChanged();
    partial void OnEmp_CodeChanging(string value);
    partial void OnEmp_CodeChanged();
    partial void OnEmp_NameChanging(string value);
    partial void OnEmp_NameChanged();
    partial void OnEmp_AddressChanging(string value);
    partial void OnEmp_AddressChanged();
    partial void OnEmp_PanChanging(string value);
    partial void OnEmp_PanChanged();
    partial void OnEmp_AadharChanging(string value);
    partial void OnEmp_AadharChanged();
    partial void OnEmp_MobChanging(string value);
    partial void OnEmp_MobChanged();
    partial void OnEmp_EmailChanging(string value);
    partial void OnEmp_EmailChanged();
    partial void OnEmp_Join_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnEmp_Join_DateChanged();
    partial void OnEmp_IsActiveChanging(System.Nullable<bool> value);
    partial void OnEmp_IsActiveChanged();
    #endregion
		
		public Employee()
		{
			this._Logins = new EntitySet<Login>(new Action<Login>(this.attach_Logins), new Action<Login>(this.detach_Logins));
			this._Logins1 = new EntitySet<Login>(new Action<Login>(this.attach_Logins1), new Action<Login>(this.detach_Logins1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Emp_Id
		{
			get
			{
				return this._Emp_Id;
			}
			set
			{
				if ((this._Emp_Id != value))
				{
					this.OnEmp_IdChanging(value);
					this.SendPropertyChanging();
					this._Emp_Id = value;
					this.SendPropertyChanged("Emp_Id");
					this.OnEmp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Code", DbType="VarChar(50)")]
		public string Emp_Code
		{
			get
			{
				return this._Emp_Code;
			}
			set
			{
				if ((this._Emp_Code != value))
				{
					this.OnEmp_CodeChanging(value);
					this.SendPropertyChanging();
					this._Emp_Code = value;
					this.SendPropertyChanged("Emp_Code");
					this.OnEmp_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Name", DbType="VarChar(50)")]
		public string Emp_Name
		{
			get
			{
				return this._Emp_Name;
			}
			set
			{
				if ((this._Emp_Name != value))
				{
					this.OnEmp_NameChanging(value);
					this.SendPropertyChanging();
					this._Emp_Name = value;
					this.SendPropertyChanged("Emp_Name");
					this.OnEmp_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Address", DbType="VarChar(50)")]
		public string Emp_Address
		{
			get
			{
				return this._Emp_Address;
			}
			set
			{
				if ((this._Emp_Address != value))
				{
					this.OnEmp_AddressChanging(value);
					this.SendPropertyChanging();
					this._Emp_Address = value;
					this.SendPropertyChanged("Emp_Address");
					this.OnEmp_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Pan", DbType="VarChar(50)")]
		public string Emp_Pan
		{
			get
			{
				return this._Emp_Pan;
			}
			set
			{
				if ((this._Emp_Pan != value))
				{
					this.OnEmp_PanChanging(value);
					this.SendPropertyChanging();
					this._Emp_Pan = value;
					this.SendPropertyChanged("Emp_Pan");
					this.OnEmp_PanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Aadhar", DbType="VarChar(50)")]
		public string Emp_Aadhar
		{
			get
			{
				return this._Emp_Aadhar;
			}
			set
			{
				if ((this._Emp_Aadhar != value))
				{
					this.OnEmp_AadharChanging(value);
					this.SendPropertyChanging();
					this._Emp_Aadhar = value;
					this.SendPropertyChanged("Emp_Aadhar");
					this.OnEmp_AadharChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Mob", DbType="VarChar(50)")]
		public string Emp_Mob
		{
			get
			{
				return this._Emp_Mob;
			}
			set
			{
				if ((this._Emp_Mob != value))
				{
					this.OnEmp_MobChanging(value);
					this.SendPropertyChanging();
					this._Emp_Mob = value;
					this.SendPropertyChanged("Emp_Mob");
					this.OnEmp_MobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Email", DbType="VarChar(50)")]
		public string Emp_Email
		{
			get
			{
				return this._Emp_Email;
			}
			set
			{
				if ((this._Emp_Email != value))
				{
					this.OnEmp_EmailChanging(value);
					this.SendPropertyChanging();
					this._Emp_Email = value;
					this.SendPropertyChanged("Emp_Email");
					this.OnEmp_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Join_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Emp_Join_Date
		{
			get
			{
				return this._Emp_Join_Date;
			}
			set
			{
				if ((this._Emp_Join_Date != value))
				{
					this.OnEmp_Join_DateChanging(value);
					this.SendPropertyChanging();
					this._Emp_Join_Date = value;
					this.SendPropertyChanged("Emp_Join_Date");
					this.OnEmp_Join_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_IsActive", DbType="Bit")]
		public System.Nullable<bool> Emp_IsActive
		{
			get
			{
				return this._Emp_IsActive;
			}
			set
			{
				if ((this._Emp_IsActive != value))
				{
					this.OnEmp_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._Emp_IsActive = value;
					this.SendPropertyChanged("Emp_IsActive");
					this.OnEmp_IsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Login", Storage="_Logins", ThisKey="Emp_Code", OtherKey="Emp_Code")]
		public EntitySet<Login> Logins
		{
			get
			{
				return this._Logins;
			}
			set
			{
				this._Logins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Login1", Storage="_Logins1", ThisKey="Emp_Id", OtherKey="Emp_Id")]
		public EntitySet<Login> Logins1
		{
			get
			{
				return this._Logins1;
			}
			set
			{
				this._Logins1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Logins(Login entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Logins(Login entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Logins1(Login entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = this;
		}
		
		private void detach_Logins1(Login entity)
		{
			this.SendPropertyChanging();
			entity.Employee1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Login_Id;
		
		private string _Usr_Name;
		
		private string _Usr_Password;
		
		private System.Nullable<int> _Emp_Id;
		
		private string _Emp_Code;
		
		private System.Nullable<bool> _Usr_Password_Change;
		
		private System.Nullable<bool> _Emp_IsActive;
		
		private EntitySet<Roles_Permission> _Roles_Permissions;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Employee> _Employee1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogin_IdChanging(int value);
    partial void OnLogin_IdChanged();
    partial void OnUsr_NameChanging(string value);
    partial void OnUsr_NameChanged();
    partial void OnUsr_PasswordChanging(string value);
    partial void OnUsr_PasswordChanged();
    partial void OnEmp_IdChanging(System.Nullable<int> value);
    partial void OnEmp_IdChanged();
    partial void OnEmp_CodeChanging(string value);
    partial void OnEmp_CodeChanged();
    partial void OnUsr_Password_ChangeChanging(System.Nullable<bool> value);
    partial void OnUsr_Password_ChangeChanged();
    partial void OnEmp_IsActiveChanging(System.Nullable<bool> value);
    partial void OnEmp_IsActiveChanged();
    #endregion
		
		public Login()
		{
			this._Roles_Permissions = new EntitySet<Roles_Permission>(new Action<Roles_Permission>(this.attach_Roles_Permissions), new Action<Roles_Permission>(this.detach_Roles_Permissions));
			this._Employee = default(EntityRef<Employee>);
			this._Employee1 = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Login_Id
		{
			get
			{
				return this._Login_Id;
			}
			set
			{
				if ((this._Login_Id != value))
				{
					this.OnLogin_IdChanging(value);
					this.SendPropertyChanging();
					this._Login_Id = value;
					this.SendPropertyChanged("Login_Id");
					this.OnLogin_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usr_Name", DbType="VarChar(50)")]
		public string Usr_Name
		{
			get
			{
				return this._Usr_Name;
			}
			set
			{
				if ((this._Usr_Name != value))
				{
					this.OnUsr_NameChanging(value);
					this.SendPropertyChanging();
					this._Usr_Name = value;
					this.SendPropertyChanged("Usr_Name");
					this.OnUsr_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usr_Password", DbType="VarChar(50)")]
		public string Usr_Password
		{
			get
			{
				return this._Usr_Password;
			}
			set
			{
				if ((this._Usr_Password != value))
				{
					this.OnUsr_PasswordChanging(value);
					this.SendPropertyChanging();
					this._Usr_Password = value;
					this.SendPropertyChanged("Usr_Password");
					this.OnUsr_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Id", DbType="Int")]
		public System.Nullable<int> Emp_Id
		{
			get
			{
				return this._Emp_Id;
			}
			set
			{
				if ((this._Emp_Id != value))
				{
					if (this._Employee1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmp_IdChanging(value);
					this.SendPropertyChanging();
					this._Emp_Id = value;
					this.SendPropertyChanged("Emp_Id");
					this.OnEmp_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Code", DbType="VarChar(50)")]
		public string Emp_Code
		{
			get
			{
				return this._Emp_Code;
			}
			set
			{
				if ((this._Emp_Code != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmp_CodeChanging(value);
					this.SendPropertyChanging();
					this._Emp_Code = value;
					this.SendPropertyChanged("Emp_Code");
					this.OnEmp_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usr_Password_Change", DbType="Bit")]
		public System.Nullable<bool> Usr_Password_Change
		{
			get
			{
				return this._Usr_Password_Change;
			}
			set
			{
				if ((this._Usr_Password_Change != value))
				{
					this.OnUsr_Password_ChangeChanging(value);
					this.SendPropertyChanging();
					this._Usr_Password_Change = value;
					this.SendPropertyChanged("Usr_Password_Change");
					this.OnUsr_Password_ChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_IsActive", DbType="Bit")]
		public System.Nullable<bool> Emp_IsActive
		{
			get
			{
				return this._Emp_IsActive;
			}
			set
			{
				if ((this._Emp_IsActive != value))
				{
					this.OnEmp_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._Emp_IsActive = value;
					this.SendPropertyChanged("Emp_IsActive");
					this.OnEmp_IsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Roles_Permission", Storage="_Roles_Permissions", ThisKey="Usr_Name", OtherKey="Usr_Name")]
		public EntitySet<Roles_Permission> Roles_Permissions
		{
			get
			{
				return this._Roles_Permissions;
			}
			set
			{
				this._Roles_Permissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Login", Storage="_Employee", ThisKey="Emp_Code", OtherKey="Emp_Code", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Logins.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Logins.Add(this);
						this._Emp_Code = value.Emp_Code;
					}
					else
					{
						this._Emp_Code = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Login1", Storage="_Employee1", ThisKey="Emp_Id", OtherKey="Emp_Id", IsForeignKey=true)]
		public Employee Employee1
		{
			get
			{
				return this._Employee1.Entity;
			}
			set
			{
				Employee previousValue = this._Employee1.Entity;
				if (((previousValue != value) 
							|| (this._Employee1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee1.Entity = null;
						previousValue.Logins1.Remove(this);
					}
					this._Employee1.Entity = value;
					if ((value != null))
					{
						value.Logins1.Add(this);
						this._Emp_Id = value.Emp_Id;
					}
					else
					{
						this._Emp_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Roles_Permissions(Roles_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Login = this;
		}
		
		private void detach_Roles_Permissions(Roles_Permission entity)
		{
			this.SendPropertyChanging();
			entity.Login = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Document")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Doc_Id;
		
		private string _Doc_Name;
		
		private System.Nullable<bool> _Doc_IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDoc_IdChanging(int value);
    partial void OnDoc_IdChanged();
    partial void OnDoc_NameChanging(string value);
    partial void OnDoc_NameChanged();
    partial void OnDoc_IsActiveChanging(System.Nullable<bool> value);
    partial void OnDoc_IsActiveChanged();
    #endregion
		
		public Document()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doc_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Doc_Id
		{
			get
			{
				return this._Doc_Id;
			}
			set
			{
				if ((this._Doc_Id != value))
				{
					this.OnDoc_IdChanging(value);
					this.SendPropertyChanging();
					this._Doc_Id = value;
					this.SendPropertyChanged("Doc_Id");
					this.OnDoc_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doc_Name", DbType="VarChar(50)")]
		public string Doc_Name
		{
			get
			{
				return this._Doc_Name;
			}
			set
			{
				if ((this._Doc_Name != value))
				{
					this.OnDoc_NameChanging(value);
					this.SendPropertyChanging();
					this._Doc_Name = value;
					this.SendPropertyChanged("Doc_Name");
					this.OnDoc_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doc_IsActive", DbType="Bit")]
		public System.Nullable<bool> Doc_IsActive
		{
			get
			{
				return this._Doc_IsActive;
			}
			set
			{
				if ((this._Doc_IsActive != value))
				{
					this.OnDoc_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._Doc_IsActive = value;
					this.SendPropertyChanged("Doc_IsActive");
					this.OnDoc_IsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Dept_Id;
		
		private string _Dept_Code;
		
		private string _Dept_Name;
		
		private string _Dept_Location;
		
		private System.Nullable<bool> _Dept_IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDept_IdChanging(int value);
    partial void OnDept_IdChanged();
    partial void OnDept_CodeChanging(string value);
    partial void OnDept_CodeChanged();
    partial void OnDept_NameChanging(string value);
    partial void OnDept_NameChanged();
    partial void OnDept_LocationChanging(string value);
    partial void OnDept_LocationChanged();
    partial void OnDept_IsActiveChanging(System.Nullable<bool> value);
    partial void OnDept_IsActiveChanged();
    #endregion
		
		public Department()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dept_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Dept_Id
		{
			get
			{
				return this._Dept_Id;
			}
			set
			{
				if ((this._Dept_Id != value))
				{
					this.OnDept_IdChanging(value);
					this.SendPropertyChanging();
					this._Dept_Id = value;
					this.SendPropertyChanged("Dept_Id");
					this.OnDept_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dept_Code", DbType="VarChar(50)")]
		public string Dept_Code
		{
			get
			{
				return this._Dept_Code;
			}
			set
			{
				if ((this._Dept_Code != value))
				{
					this.OnDept_CodeChanging(value);
					this.SendPropertyChanging();
					this._Dept_Code = value;
					this.SendPropertyChanged("Dept_Code");
					this.OnDept_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dept_Name", DbType="VarChar(50)")]
		public string Dept_Name
		{
			get
			{
				return this._Dept_Name;
			}
			set
			{
				if ((this._Dept_Name != value))
				{
					this.OnDept_NameChanging(value);
					this.SendPropertyChanging();
					this._Dept_Name = value;
					this.SendPropertyChanged("Dept_Name");
					this.OnDept_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dept_Location", DbType="VarChar(50)")]
		public string Dept_Location
		{
			get
			{
				return this._Dept_Location;
			}
			set
			{
				if ((this._Dept_Location != value))
				{
					this.OnDept_LocationChanging(value);
					this.SendPropertyChanging();
					this._Dept_Location = value;
					this.SendPropertyChanged("Dept_Location");
					this.OnDept_LocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dept_IsActive", DbType="Bit")]
		public System.Nullable<bool> Dept_IsActive
		{
			get
			{
				return this._Dept_IsActive;
			}
			set
			{
				if ((this._Dept_IsActive != value))
				{
					this.OnDept_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._Dept_IsActive = value;
					this.SendPropertyChanged("Dept_IsActive");
					this.OnDept_IsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.X_Emp_Dept")]
	public partial class X_Emp_Dept
	{
		
		private System.Nullable<int> _Emp_Id;
		
		private System.Nullable<int> _Dept_Id;
		
		private string _Change_From;
		
		private string _Change_To;
		
		public X_Emp_Dept()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_Id", DbType="Int")]
		public System.Nullable<int> Emp_Id
		{
			get
			{
				return this._Emp_Id;
			}
			set
			{
				if ((this._Emp_Id != value))
				{
					this._Emp_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dept_Id", DbType="Int")]
		public System.Nullable<int> Dept_Id
		{
			get
			{
				return this._Dept_Id;
			}
			set
			{
				if ((this._Dept_Id != value))
				{
					this._Dept_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Change_From", DbType="VarChar(50)")]
		public string Change_From
		{
			get
			{
				return this._Change_From;
			}
			set
			{
				if ((this._Change_From != value))
				{
					this._Change_From = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Change_To", DbType="VarChar(50)")]
		public string Change_To
		{
			get
			{
				return this._Change_To;
			}
			set
			{
				if ((this._Change_To != value))
				{
					this._Change_To = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles_Permission")]
	public partial class Roles_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Roles_Id;
		
		private string _Usr_Name;
		
		private string _Usr_Role;
		
		private System.Nullable<bool> _Veh_Reg_Perm;
		
		private System.Nullable<bool> _Veh_Aproval_Perm;
		
		private System.Nullable<bool> _DL_Manage_Perm;
		
		private System.Nullable<bool> _User_Manage_Perm;
		
		private EntityRef<Login> _Login;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoles_IdChanging(int value);
    partial void OnRoles_IdChanged();
    partial void OnUsr_NameChanging(string value);
    partial void OnUsr_NameChanged();
    partial void OnUsr_RoleChanging(string value);
    partial void OnUsr_RoleChanged();
    partial void OnVeh_Reg_PermChanging(System.Nullable<bool> value);
    partial void OnVeh_Reg_PermChanged();
    partial void OnVeh_Aproval_PermChanging(System.Nullable<bool> value);
    partial void OnVeh_Aproval_PermChanged();
    partial void OnDL_Manage_PermChanging(System.Nullable<bool> value);
    partial void OnDL_Manage_PermChanged();
    partial void OnUser_Manage_PermChanging(System.Nullable<bool> value);
    partial void OnUser_Manage_PermChanged();
    #endregion
		
		public Roles_Permission()
		{
			this._Login = default(EntityRef<Login>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roles_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Roles_Id
		{
			get
			{
				return this._Roles_Id;
			}
			set
			{
				if ((this._Roles_Id != value))
				{
					this.OnRoles_IdChanging(value);
					this.SendPropertyChanging();
					this._Roles_Id = value;
					this.SendPropertyChanged("Roles_Id");
					this.OnRoles_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usr_Name", DbType="VarChar(50)")]
		public string Usr_Name
		{
			get
			{
				return this._Usr_Name;
			}
			set
			{
				if ((this._Usr_Name != value))
				{
					if (this._Login.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsr_NameChanging(value);
					this.SendPropertyChanging();
					this._Usr_Name = value;
					this.SendPropertyChanged("Usr_Name");
					this.OnUsr_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Usr_Role", DbType="VarChar(50)")]
		public string Usr_Role
		{
			get
			{
				return this._Usr_Role;
			}
			set
			{
				if ((this._Usr_Role != value))
				{
					this.OnUsr_RoleChanging(value);
					this.SendPropertyChanging();
					this._Usr_Role = value;
					this.SendPropertyChanged("Usr_Role");
					this.OnUsr_RoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veh_Reg_Perm", DbType="Bit")]
		public System.Nullable<bool> Veh_Reg_Perm
		{
			get
			{
				return this._Veh_Reg_Perm;
			}
			set
			{
				if ((this._Veh_Reg_Perm != value))
				{
					this.OnVeh_Reg_PermChanging(value);
					this.SendPropertyChanging();
					this._Veh_Reg_Perm = value;
					this.SendPropertyChanged("Veh_Reg_Perm");
					this.OnVeh_Reg_PermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veh_Aproval_Perm", DbType="Bit")]
		public System.Nullable<bool> Veh_Aproval_Perm
		{
			get
			{
				return this._Veh_Aproval_Perm;
			}
			set
			{
				if ((this._Veh_Aproval_Perm != value))
				{
					this.OnVeh_Aproval_PermChanging(value);
					this.SendPropertyChanging();
					this._Veh_Aproval_Perm = value;
					this.SendPropertyChanged("Veh_Aproval_Perm");
					this.OnVeh_Aproval_PermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DL_Manage_Perm", DbType="Bit")]
		public System.Nullable<bool> DL_Manage_Perm
		{
			get
			{
				return this._DL_Manage_Perm;
			}
			set
			{
				if ((this._DL_Manage_Perm != value))
				{
					this.OnDL_Manage_PermChanging(value);
					this.SendPropertyChanging();
					this._DL_Manage_Perm = value;
					this.SendPropertyChanged("DL_Manage_Perm");
					this.OnDL_Manage_PermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Manage_Perm", DbType="Bit")]
		public System.Nullable<bool> User_Manage_Perm
		{
			get
			{
				return this._User_Manage_Perm;
			}
			set
			{
				if ((this._User_Manage_Perm != value))
				{
					this.OnUser_Manage_PermChanging(value);
					this.SendPropertyChanging();
					this._User_Manage_Perm = value;
					this.SendPropertyChanged("User_Manage_Perm");
					this.OnUser_Manage_PermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Login_Roles_Permission", Storage="_Login", ThisKey="Usr_Name", OtherKey="Usr_Name", IsForeignKey=true)]
		public Login Login
		{
			get
			{
				return this._Login.Entity;
			}
			set
			{
				Login previousValue = this._Login.Entity;
				if (((previousValue != value) 
							|| (this._Login.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Login.Entity = null;
						previousValue.Roles_Permissions.Remove(this);
					}
					this._Login.Entity = value;
					if ((value != null))
					{
						value.Roles_Permissions.Add(this);
						this._Usr_Name = value.Usr_Name;
					}
					else
					{
						this._Usr_Name = default(string);
					}
					this.SendPropertyChanged("Login");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Registration")]
	public partial class Registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Reg_Id;
		
		private System.Nullable<int> _Cust_Id;
		
		private string _Cust_Code;
		
		private System.Nullable<int> _Veh_Id;
		
		private string _Veh_Code;
		
		private string _EngineNo;
		
		private string _ChassisNo;
		
		private string _Reg_No;
		
		private System.Nullable<System.DateTime> _Reg_Apply_Date;
		
		private System.Nullable<System.DateTime> _Reg_Approval_Date;
		
		private System.Nullable<System.DateTime> _Reg_Validupto_Date;
		
		private System.Nullable<System.DateTime> _Ownership_from_Date;
		
		private System.Nullable<System.DateTime> _Ownership_to_Date;
		
		private string _Application_ID;
		
		private string _Application_Status;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Customer> _Customer1;
		
		private EntityRef<Vehicle> _Vehicle;
		
		private EntityRef<Vehicle> _Vehicle1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReg_IdChanging(int value);
    partial void OnReg_IdChanged();
    partial void OnCust_IdChanging(System.Nullable<int> value);
    partial void OnCust_IdChanged();
    partial void OnCust_CodeChanging(string value);
    partial void OnCust_CodeChanged();
    partial void OnVeh_IdChanging(System.Nullable<int> value);
    partial void OnVeh_IdChanged();
    partial void OnVeh_CodeChanging(string value);
    partial void OnVeh_CodeChanged();
    partial void OnEngineNoChanging(string value);
    partial void OnEngineNoChanged();
    partial void OnChassisNoChanging(string value);
    partial void OnChassisNoChanged();
    partial void OnReg_NoChanging(string value);
    partial void OnReg_NoChanged();
    partial void OnReg_Apply_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnReg_Apply_DateChanged();
    partial void OnReg_Approval_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnReg_Approval_DateChanged();
    partial void OnReg_Validupto_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnReg_Validupto_DateChanged();
    partial void OnOwnership_from_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnOwnership_from_DateChanged();
    partial void OnOwnership_to_DateChanging(System.Nullable<System.DateTime> value);
    partial void OnOwnership_to_DateChanged();
    partial void OnApplication_IDChanging(string value);
    partial void OnApplication_IDChanged();
    partial void OnApplication_StatusChanging(string value);
    partial void OnApplication_StatusChanged();
    #endregion
		
		public Registration()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Customer1 = default(EntityRef<Customer>);
			this._Vehicle = default(EntityRef<Vehicle>);
			this._Vehicle1 = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reg_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Reg_Id
		{
			get
			{
				return this._Reg_Id;
			}
			set
			{
				if ((this._Reg_Id != value))
				{
					this.OnReg_IdChanging(value);
					this.SendPropertyChanging();
					this._Reg_Id = value;
					this.SendPropertyChanged("Reg_Id");
					this.OnReg_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Id", DbType="Int")]
		public System.Nullable<int> Cust_Id
		{
			get
			{
				return this._Cust_Id;
			}
			set
			{
				if ((this._Cust_Id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCust_IdChanging(value);
					this.SendPropertyChanging();
					this._Cust_Id = value;
					this.SendPropertyChanged("Cust_Id");
					this.OnCust_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Code", DbType="VarChar(50)")]
		public string Cust_Code
		{
			get
			{
				return this._Cust_Code;
			}
			set
			{
				if ((this._Cust_Code != value))
				{
					if (this._Customer1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCust_CodeChanging(value);
					this.SendPropertyChanging();
					this._Cust_Code = value;
					this.SendPropertyChanged("Cust_Code");
					this.OnCust_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veh_Id", DbType="Int")]
		public System.Nullable<int> Veh_Id
		{
			get
			{
				return this._Veh_Id;
			}
			set
			{
				if ((this._Veh_Id != value))
				{
					if (this._Vehicle1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVeh_IdChanging(value);
					this.SendPropertyChanging();
					this._Veh_Id = value;
					this.SendPropertyChanged("Veh_Id");
					this.OnVeh_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veh_Code", DbType="VarChar(50)")]
		public string Veh_Code
		{
			get
			{
				return this._Veh_Code;
			}
			set
			{
				if ((this._Veh_Code != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVeh_CodeChanging(value);
					this.SendPropertyChanging();
					this._Veh_Code = value;
					this.SendPropertyChanged("Veh_Code");
					this.OnVeh_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineNo", DbType="VarChar(50)")]
		public string EngineNo
		{
			get
			{
				return this._EngineNo;
			}
			set
			{
				if ((this._EngineNo != value))
				{
					this.OnEngineNoChanging(value);
					this.SendPropertyChanging();
					this._EngineNo = value;
					this.SendPropertyChanged("EngineNo");
					this.OnEngineNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChassisNo", DbType="VarChar(50)")]
		public string ChassisNo
		{
			get
			{
				return this._ChassisNo;
			}
			set
			{
				if ((this._ChassisNo != value))
				{
					this.OnChassisNoChanging(value);
					this.SendPropertyChanging();
					this._ChassisNo = value;
					this.SendPropertyChanged("ChassisNo");
					this.OnChassisNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reg_No", DbType="VarChar(50)")]
		public string Reg_No
		{
			get
			{
				return this._Reg_No;
			}
			set
			{
				if ((this._Reg_No != value))
				{
					this.OnReg_NoChanging(value);
					this.SendPropertyChanging();
					this._Reg_No = value;
					this.SendPropertyChanged("Reg_No");
					this.OnReg_NoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reg_Apply_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Reg_Apply_Date
		{
			get
			{
				return this._Reg_Apply_Date;
			}
			set
			{
				if ((this._Reg_Apply_Date != value))
				{
					this.OnReg_Apply_DateChanging(value);
					this.SendPropertyChanging();
					this._Reg_Apply_Date = value;
					this.SendPropertyChanged("Reg_Apply_Date");
					this.OnReg_Apply_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reg_Approval_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Reg_Approval_Date
		{
			get
			{
				return this._Reg_Approval_Date;
			}
			set
			{
				if ((this._Reg_Approval_Date != value))
				{
					this.OnReg_Approval_DateChanging(value);
					this.SendPropertyChanging();
					this._Reg_Approval_Date = value;
					this.SendPropertyChanged("Reg_Approval_Date");
					this.OnReg_Approval_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reg_Validupto_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Reg_Validupto_Date
		{
			get
			{
				return this._Reg_Validupto_Date;
			}
			set
			{
				if ((this._Reg_Validupto_Date != value))
				{
					this.OnReg_Validupto_DateChanging(value);
					this.SendPropertyChanging();
					this._Reg_Validupto_Date = value;
					this.SendPropertyChanged("Reg_Validupto_Date");
					this.OnReg_Validupto_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ownership_from_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Ownership_from_Date
		{
			get
			{
				return this._Ownership_from_Date;
			}
			set
			{
				if ((this._Ownership_from_Date != value))
				{
					this.OnOwnership_from_DateChanging(value);
					this.SendPropertyChanging();
					this._Ownership_from_Date = value;
					this.SendPropertyChanged("Ownership_from_Date");
					this.OnOwnership_from_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ownership_to_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Ownership_to_Date
		{
			get
			{
				return this._Ownership_to_Date;
			}
			set
			{
				if ((this._Ownership_to_Date != value))
				{
					this.OnOwnership_to_DateChanging(value);
					this.SendPropertyChanging();
					this._Ownership_to_Date = value;
					this.SendPropertyChanged("Ownership_to_Date");
					this.OnOwnership_to_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Application_ID", DbType="VarChar(50)")]
		public string Application_ID
		{
			get
			{
				return this._Application_ID;
			}
			set
			{
				if ((this._Application_ID != value))
				{
					this.OnApplication_IDChanging(value);
					this.SendPropertyChanging();
					this._Application_ID = value;
					this.SendPropertyChanged("Application_ID");
					this.OnApplication_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Application_Status", DbType="VarChar(50)")]
		public string Application_Status
		{
			get
			{
				return this._Application_Status;
			}
			set
			{
				if ((this._Application_Status != value))
				{
					this.OnApplication_StatusChanging(value);
					this.SendPropertyChanging();
					this._Application_Status = value;
					this.SendPropertyChanged("Application_Status");
					this.OnApplication_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Registration", Storage="_Customer", ThisKey="Cust_Id", OtherKey="Cust_Id", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Registrations.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Registrations.Add(this);
						this._Cust_Id = value.Cust_Id;
					}
					else
					{
						this._Cust_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Registration1", Storage="_Customer1", ThisKey="Cust_Code", OtherKey="Cust_Code", IsForeignKey=true)]
		public Customer Customer1
		{
			get
			{
				return this._Customer1.Entity;
			}
			set
			{
				Customer previousValue = this._Customer1.Entity;
				if (((previousValue != value) 
							|| (this._Customer1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer1.Entity = null;
						previousValue.Registrations1.Remove(this);
					}
					this._Customer1.Entity = value;
					if ((value != null))
					{
						value.Registrations1.Add(this);
						this._Cust_Code = value.Cust_Code;
					}
					else
					{
						this._Cust_Code = default(string);
					}
					this.SendPropertyChanged("Customer1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Registration", Storage="_Vehicle", ThisKey="Veh_Code", OtherKey="Veh_Code", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.Registrations.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.Registrations.Add(this);
						this._Veh_Code = value.Veh_Code;
					}
					else
					{
						this._Veh_Code = default(string);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Registration1", Storage="_Vehicle1", ThisKey="Veh_Id", OtherKey="Veh_Id", IsForeignKey=true)]
		public Vehicle Vehicle1
		{
			get
			{
				return this._Vehicle1.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle1.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle1.Entity = null;
						previousValue.Registrations1.Remove(this);
					}
					this._Vehicle1.Entity = value;
					if ((value != null))
					{
						value.Registrations1.Add(this);
						this._Veh_Id = value.Veh_Id;
					}
					else
					{
						this._Veh_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Vehicle1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cust_Id;
		
		private string _Cust_Code;
		
		private string _Cust_Type;
		
		private string _Cust_Name;
		
		private string _Cust_Address;
		
		private string _Cust_Pan;
		
		private string _Cust_Aadhar;
		
		private string _Cust_Mob;
		
		private string _Cust_Email;
		
		private System.Nullable<bool> _Cust_IsActive;
		
		private EntitySet<Registration> _Registrations;
		
		private EntitySet<Registration> _Registrations1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCust_IdChanging(int value);
    partial void OnCust_IdChanged();
    partial void OnCust_CodeChanging(string value);
    partial void OnCust_CodeChanged();
    partial void OnCust_TypeChanging(string value);
    partial void OnCust_TypeChanged();
    partial void OnCust_NameChanging(string value);
    partial void OnCust_NameChanged();
    partial void OnCust_AddressChanging(string value);
    partial void OnCust_AddressChanged();
    partial void OnCust_PanChanging(string value);
    partial void OnCust_PanChanged();
    partial void OnCust_AadharChanging(string value);
    partial void OnCust_AadharChanged();
    partial void OnCust_MobChanging(string value);
    partial void OnCust_MobChanged();
    partial void OnCust_EmailChanging(string value);
    partial void OnCust_EmailChanged();
    partial void OnCust_IsActiveChanging(System.Nullable<bool> value);
    partial void OnCust_IsActiveChanged();
    #endregion
		
		public Customer()
		{
			this._Registrations = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations), new Action<Registration>(this.detach_Registrations));
			this._Registrations1 = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations1), new Action<Registration>(this.detach_Registrations1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cust_Id
		{
			get
			{
				return this._Cust_Id;
			}
			set
			{
				if ((this._Cust_Id != value))
				{
					this.OnCust_IdChanging(value);
					this.SendPropertyChanging();
					this._Cust_Id = value;
					this.SendPropertyChanged("Cust_Id");
					this.OnCust_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Code", DbType="VarChar(50)")]
		public string Cust_Code
		{
			get
			{
				return this._Cust_Code;
			}
			set
			{
				if ((this._Cust_Code != value))
				{
					this.OnCust_CodeChanging(value);
					this.SendPropertyChanging();
					this._Cust_Code = value;
					this.SendPropertyChanged("Cust_Code");
					this.OnCust_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Type", DbType="VarChar(50)")]
		public string Cust_Type
		{
			get
			{
				return this._Cust_Type;
			}
			set
			{
				if ((this._Cust_Type != value))
				{
					this.OnCust_TypeChanging(value);
					this.SendPropertyChanging();
					this._Cust_Type = value;
					this.SendPropertyChanged("Cust_Type");
					this.OnCust_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Name", DbType="VarChar(50)")]
		public string Cust_Name
		{
			get
			{
				return this._Cust_Name;
			}
			set
			{
				if ((this._Cust_Name != value))
				{
					this.OnCust_NameChanging(value);
					this.SendPropertyChanging();
					this._Cust_Name = value;
					this.SendPropertyChanged("Cust_Name");
					this.OnCust_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Address", DbType="VarChar(50)")]
		public string Cust_Address
		{
			get
			{
				return this._Cust_Address;
			}
			set
			{
				if ((this._Cust_Address != value))
				{
					this.OnCust_AddressChanging(value);
					this.SendPropertyChanging();
					this._Cust_Address = value;
					this.SendPropertyChanged("Cust_Address");
					this.OnCust_AddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Pan", DbType="VarChar(50)")]
		public string Cust_Pan
		{
			get
			{
				return this._Cust_Pan;
			}
			set
			{
				if ((this._Cust_Pan != value))
				{
					this.OnCust_PanChanging(value);
					this.SendPropertyChanging();
					this._Cust_Pan = value;
					this.SendPropertyChanged("Cust_Pan");
					this.OnCust_PanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Aadhar", DbType="VarChar(50)")]
		public string Cust_Aadhar
		{
			get
			{
				return this._Cust_Aadhar;
			}
			set
			{
				if ((this._Cust_Aadhar != value))
				{
					this.OnCust_AadharChanging(value);
					this.SendPropertyChanging();
					this._Cust_Aadhar = value;
					this.SendPropertyChanged("Cust_Aadhar");
					this.OnCust_AadharChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Mob", DbType="VarChar(50)")]
		public string Cust_Mob
		{
			get
			{
				return this._Cust_Mob;
			}
			set
			{
				if ((this._Cust_Mob != value))
				{
					this.OnCust_MobChanging(value);
					this.SendPropertyChanging();
					this._Cust_Mob = value;
					this.SendPropertyChanged("Cust_Mob");
					this.OnCust_MobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Email", DbType="VarChar(50)")]
		public string Cust_Email
		{
			get
			{
				return this._Cust_Email;
			}
			set
			{
				if ((this._Cust_Email != value))
				{
					this.OnCust_EmailChanging(value);
					this.SendPropertyChanging();
					this._Cust_Email = value;
					this.SendPropertyChanged("Cust_Email");
					this.OnCust_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_IsActive", DbType="Bit")]
		public System.Nullable<bool> Cust_IsActive
		{
			get
			{
				return this._Cust_IsActive;
			}
			set
			{
				if ((this._Cust_IsActive != value))
				{
					this.OnCust_IsActiveChanging(value);
					this.SendPropertyChanging();
					this._Cust_IsActive = value;
					this.SendPropertyChanged("Cust_IsActive");
					this.OnCust_IsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Registration", Storage="_Registrations", ThisKey="Cust_Id", OtherKey="Cust_Id")]
		public EntitySet<Registration> Registrations
		{
			get
			{
				return this._Registrations;
			}
			set
			{
				this._Registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Registration1", Storage="_Registrations1", ThisKey="Cust_Code", OtherKey="Cust_Code")]
		public EntitySet<Registration> Registrations1
		{
			get
			{
				return this._Registrations1;
			}
			set
			{
				this._Registrations1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_Registrations1(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = this;
		}
		
		private void detach_Registrations1(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Customer1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Veh_Id;
		
		private string _Veh_Code;
		
		private string _Veh_Company;
		
		private string _Veh_Model;
		
		private string _Veh_Color;
		
		private string _Veh_Type;
		
		private EntitySet<Registration> _Registrations;
		
		private EntitySet<Registration> _Registrations1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVeh_IdChanging(int value);
    partial void OnVeh_IdChanged();
    partial void OnVeh_CodeChanging(string value);
    partial void OnVeh_CodeChanged();
    partial void OnVeh_CompanyChanging(string value);
    partial void OnVeh_CompanyChanged();
    partial void OnVeh_ModelChanging(string value);
    partial void OnVeh_ModelChanged();
    partial void OnVeh_ColorChanging(string value);
    partial void OnVeh_ColorChanged();
    partial void OnVeh_TypeChanging(string value);
    partial void OnVeh_TypeChanged();
    #endregion
		
		public Vehicle()
		{
			this._Registrations = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations), new Action<Registration>(this.detach_Registrations));
			this._Registrations1 = new EntitySet<Registration>(new Action<Registration>(this.attach_Registrations1), new Action<Registration>(this.detach_Registrations1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veh_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Veh_Id
		{
			get
			{
				return this._Veh_Id;
			}
			set
			{
				if ((this._Veh_Id != value))
				{
					this.OnVeh_IdChanging(value);
					this.SendPropertyChanging();
					this._Veh_Id = value;
					this.SendPropertyChanged("Veh_Id");
					this.OnVeh_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veh_Code", DbType="VarChar(50)")]
		public string Veh_Code
		{
			get
			{
				return this._Veh_Code;
			}
			set
			{
				if ((this._Veh_Code != value))
				{
					this.OnVeh_CodeChanging(value);
					this.SendPropertyChanging();
					this._Veh_Code = value;
					this.SendPropertyChanged("Veh_Code");
					this.OnVeh_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veh_Company", DbType="VarChar(50)")]
		public string Veh_Company
		{
			get
			{
				return this._Veh_Company;
			}
			set
			{
				if ((this._Veh_Company != value))
				{
					this.OnVeh_CompanyChanging(value);
					this.SendPropertyChanging();
					this._Veh_Company = value;
					this.SendPropertyChanged("Veh_Company");
					this.OnVeh_CompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veh_Model", DbType="VarChar(50)")]
		public string Veh_Model
		{
			get
			{
				return this._Veh_Model;
			}
			set
			{
				if ((this._Veh_Model != value))
				{
					this.OnVeh_ModelChanging(value);
					this.SendPropertyChanging();
					this._Veh_Model = value;
					this.SendPropertyChanged("Veh_Model");
					this.OnVeh_ModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veh_Color", DbType="VarChar(50)")]
		public string Veh_Color
		{
			get
			{
				return this._Veh_Color;
			}
			set
			{
				if ((this._Veh_Color != value))
				{
					this.OnVeh_ColorChanging(value);
					this.SendPropertyChanging();
					this._Veh_Color = value;
					this.SendPropertyChanged("Veh_Color");
					this.OnVeh_ColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veh_Type", DbType="VarChar(50)")]
		public string Veh_Type
		{
			get
			{
				return this._Veh_Type;
			}
			set
			{
				if ((this._Veh_Type != value))
				{
					this.OnVeh_TypeChanging(value);
					this.SendPropertyChanging();
					this._Veh_Type = value;
					this.SendPropertyChanged("Veh_Type");
					this.OnVeh_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Registration", Storage="_Registrations", ThisKey="Veh_Code", OtherKey="Veh_Code")]
		public EntitySet<Registration> Registrations
		{
			get
			{
				return this._Registrations;
			}
			set
			{
				this._Registrations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Registration1", Storage="_Registrations1", ThisKey="Veh_Id", OtherKey="Veh_Id")]
		public EntitySet<Registration> Registrations1
		{
			get
			{
				return this._Registrations1;
			}
			set
			{
				this._Registrations1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_Registrations(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
		
		private void attach_Registrations1(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle1 = this;
		}
		
		private void detach_Registrations1(Registration entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.X_Cust_Doc")]
	public partial class X_Cust_Doc
	{
		
		private System.Nullable<int> _Doc_Id;
		
		private System.Nullable<int> _Cust_Id;
		
		private System.Nullable<bool> _Doc_Upload;
		
		public X_Cust_Doc()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doc_Id", DbType="Int")]
		public System.Nullable<int> Doc_Id
		{
			get
			{
				return this._Doc_Id;
			}
			set
			{
				if ((this._Doc_Id != value))
				{
					this._Doc_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Id", DbType="Int")]
		public System.Nullable<int> Cust_Id
		{
			get
			{
				return this._Cust_Id;
			}
			set
			{
				if ((this._Cust_Id != value))
				{
					this._Cust_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doc_Upload", DbType="Bit")]
		public System.Nullable<bool> Doc_Upload
		{
			get
			{
				return this._Doc_Upload;
			}
			set
			{
				if ((this._Doc_Upload != value))
				{
					this._Doc_Upload = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
